{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.providers.ts","webpack:///./src/app/components/botMessage.component.html","webpack:///./src/app/components/botMessage.component.ts","webpack:///./src/app/components/conversation.component.html","webpack:///./src/app/components/conversation.component.ts","webpack:///./src/app/components/customerMessage.component.html","webpack:///./src/app/components/customerMessage.component.ts","webpack:///./src/app/components/rating.component.html","webpack:///./src/app/components/rating.component.ts","webpack:///./src/app/configs/api-details-service.interface.ts","webpack:///./src/app/configs/api-details.service.prod.ts","webpack:///./src/app/configs/login-details-service.interface.ts","webpack:///./src/app/configs/login-details.service.prod.ts","webpack:///./src/app/models/adalConfig.ts","webpack:///./src/app/models/sendMail.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/conversation.service.ts","webpack:///./src/environments/environment.model.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthenticationGuard } from 'microsoft-adal-angular6';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n    { path: '', component: AppComponent, pathMatch: 'full', canActivate: [AuthenticationGuard]}\n  ];\n@NgModule({\n    imports: [\n      RouterModule.forRoot(routes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\n  export class AppRoutingModule { }\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"chatWindow\\\">\\n    <div [ngClass]=\\\"isMinimalized ? 'hide-conversation' : ''\\\" class=\\\"robot\\\">\\n      <img class=\\\"robotman\\\" src=\\\"/assets/img/bot-img.png\\\" />\\n    </div>\\n    <div class=\\\"window\\\">\\n      <div class=\\\"windowBar\\\" (click)=\\\"onMinimalize()\\\">\\n        <div class=\\\"botNameBar\\\">\\n          <img\\n            [ngClass]=\\\"!isMinimalized ? 'hide-conversation' : ''\\\"\\n            class=\\\"robotImg\\\"\\n            src=\\\"/assets/img/bot-img.png\\\"\\n          />\\n          <span class=\\\"firstPartName\\\">Ask </span> <span class=\\\"botName\\\">Gunhild</span>\\n          <a class=\\\"minimalizeButton\\\">–</a>\\n        </div>\\n      </div>\\n      <div [ngClass]=\\\"isMinimalized ? 'hide-conversation' : ''\\\">\\n        <conversation (conversationIdEmitter)=\\\"sendConversationId($event)\\\"></conversation>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { MsAdalAngular6Service } from 'microsoft-adal-angular6';\nimport * as $ from 'jquery';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'app';\n  public isMinimalized = true;\n  public token!: string;\n  public conversationId!: string;\n\n  constructor(private adalSvc: MsAdalAngular6Service) {\n    this.getToken();\n  }\n\n  getToken() {\n    this.adalSvc.acquireToken('https://graph.microsoft.com').subscribe(\n      (token: string) => {\n        this.token = token;\n      },\n      (error: any) => {\n        console.log(error);\n      }\n    );\n  }\n\n  onMinimalize() {\n    if (this.isMinimalized) {\n      this.isMinimalized = false;\n      this.setFocus();\n    } else {\n      this.isMinimalized = true;\n    }\n  }\n\n  setFocus() {\n    setTimeout(function() {\n      $('.inputText').focus();\n    }, 50);\n  }\n\n  sendConversationId(conversationId: string) {\n    this.conversationId = conversationId;\n  }\n}\n","import { Injector } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ConversationComponent } from './components/conversation.component';\nimport { BotMessageComponent, SafeHtmlPipe } from './components/botMessage.component';\nimport { CustomerMessageComponent } from './components/customerMessage.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RatingComponent } from './components/rating.component';\nimport { AppProviders } from './app.providers';\nimport { AppConfig } from './app.config';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthenticationGuard, MsAdalAngular6Module } from 'microsoft-adal-angular6';\nimport { Injectable, Inject } from '@angular/core';\nimport {APP_BASE_HREF} from '@angular/common';\n\nimport { ILoginDetailsServiceToken, ILoginDetailsService } from './configs/login-details-service.interface';\nimport { environment } from '../environments/environment';\nimport { AdalConfig } from './models/adalConfig';\n\nexport const reducerToken = new AdalConfig(\n  environment.tenant,\n  environment.clientId,\n  environment.redirectUri,\n  environment.navigateToLoginRequestUrl,\n  environment.cacheLocation\n); // Injector.create(AppConfig).get<ILoginDetailsService>(ILoginDetailsServiceToken).getLoginDetails();\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConversationComponent,\n    BotMessageComponent,\n    CustomerMessageComponent,\n    RatingComponent,\n    SafeHtmlPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    MsAdalAngular6Module.forRoot(reducerToken)\n  ],\n  providers: [AppProviders, AuthenticationGuard, {provide: APP_BASE_HREF, useFactory: getBaseHref}],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\nexport function getBaseHref(): string {\n  return window.location.pathname + window.location.search;\n}\n","import { ConversationService } from './services/conversation.service';\nimport { AuthService } from './services/auth.service';\nimport { IApiDetailsServiceToken } from './configs/api-details-service.interface';\nimport { ApiDetailsServiceProd } from './configs/api-details.service.prod';\nimport { ILoginDetailsServiceToken } from './configs/login-details-service.interface';\nimport { LoginDetailsServiceProd } from './configs/login-details.service.prod';\nconst providers: any[] = [\n    ConversationService,\n    AuthService\n];\n\nproviders.push({ provide: IApiDetailsServiceToken, useClass: ApiDetailsServiceProd });\nproviders.push({ provide: ILoginDetailsServiceToken, useClass: LoginDetailsServiceProd });\n\nexport const AppProviders = [\n    providers\n];\n","module.exports = \"<img class=\\\"icon\\\" src=\\\"/assets/img/bot-img.png\\\" />\\n<div class=\\\"message\\\">\\n  <span id=\\\"message\\\">\\n    <div *ngFor=\\\"let botMsg of botMsg\\\">\\n      <div *ngIf=\\\"botMsg.responseType == 'text'\\\">\\n        <div id=\\\"{{ botMsg.answerId }}\\\" *ngIf=\\\"botMsg.text != null\\\" [innerHTML]=\\\"botMsg.text | safeHtml\\\"></div>\\n      </div>\\n      <div *ngIf=\\\"botMsg.responseType == 'option'\\\">\\n        <div *ngIf=\\\"botMsg.title != null\\\" [innerHTML]=\\\"botMsg.title\\\"></div>\\n        <div *ngIf=\\\"botMsg.description != null\\\" [innerHTML]=\\\"botMsg.description\\\"></div>\\n        <div id=\\\"{{ botMsg.answerId }}\\\">\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"bulletpoint\\\"\\n            *ngFor=\\\"let option of botMsg.optionList\\\"\\n            (click)=\\\"onOptionClick(option.label, option.value)\\\"\\n          >\\n            <i class=\\\"fas fa-circle bullet\\\"></i>\\n            <div class=\\\"bulletpointText\\\">{{ option.label }}</div>\\n          </button>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"botMsg.responseType == 'image'\\\">\\n        <div *ngIf=\\\"botMsg.imageSource != null\\\">\\n          <div *ngIf=\\\"botMsg.title != null\\\" [innerHTML]=\\\"botMsg.title\\\"></div>\\n          <div *ngIf=\\\"botMsg.description != null\\\" [innerHTML]=\\\"botMsg.description\\\"></div>\\n          <img class=\\\"imgContainer\\\" src=\\\"{{ botMsg.imageSource }}\\\" alt=\\\"{{ botMsg.imageSource }}\\\" />\\n          <div>\\n            <a href=\\\"{{ botMsg.imageSource }}\\\" target=\\\"_blank\\\" class=\\\"clickImageLink\\\">Click to open</a>\\n          </div>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"botMsg.responseType == 'mail'\\\">\\n        <div>Would you like to add a comment?</div>\\n        <div id=\\\"{{ botMsg.answerId }}\\\">\\n          <button type=\\\"button\\\" class=\\\"bulletpoint\\\" (click)=\\\"onCommentOptionClick(0, botMsg.answerId)\\\">\\n            <i class=\\\"fas fa-circle bullet\\\"></i>\\n            <div class=\\\"bulletpointText\\\">No thanks, please send the question now</div>\\n          </button>\\n          <button type=\\\"button\\\" class=\\\"bulletpoint\\\" (click)=\\\"onCommentOptionClick(1, botMsg.answerId)\\\">\\n            <i class=\\\"fas fa-circle bullet\\\"></i>\\n            <div class=\\\"bulletpointText\\\">Yes</div>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"showCommentBox\\\">\\n      <input\\n        class=\\\"commentBox\\\"\\n        [(ngModel)]=\\\"commentToMail\\\"\\n        (keyup.enter)=\\\"onSendMailClick()\\\"\\n        placeholder=\\\"Write your comment here...\\\"\\n      />\\n      <i class=\\\"fas fa-paper-plane\\\" (click)=\\\"onSendMailClick()\\\"></i>\\n    </div>\\n    <div *ngIf=\\\"showCommentBoxThumbDown\\\">\\n      <input\\n        class=\\\"commentBox\\\"\\n        [(ngModel)]=\\\"commentToThumbDown\\\"\\n        (keyup.enter)=\\\"onSendCommentClick()\\\"\\n        placeholder=\\\"Write your comment here...\\\"\\n      />\\n      <i class=\\\"fas fa-paper-plane\\\" (click)=\\\"onSendCommentClick()\\\"></i>\\n    </div>\\n  </span>\\n</div>\\n\"","import { Component, OnInit, Input, Output, EventEmitter, Pipe, PipeTransform, HostListener, AfterViewInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as $ from 'jquery';\nimport { MessageAnswer } from '../models/messageResponse';\nimport { ConversationService } from '../services/conversation.service';\nimport { SendMail } from '../models/sendMail';\n\n@Pipe({ name: 'safeHtml' })\nexport class SafeHtmlPipe implements PipeTransform {\n    constructor(private sanitized: DomSanitizer) { }\n    transform(value: string) {\n        return this.sanitized.bypassSecurityTrustHtml(value);\n    }\n}\n\n@Component({\n    selector: 'botMessage',\n    templateUrl: './botMessage.component.html'\n})\n\nexport class BotMessageComponent implements OnInit {\n    @Input() public botMessages!: MessageAnswer[];\n    @Input() public answerId!: number;\n    @Input() public conversationId!: string;\n    @Input() public answerIds!: any[];\n    @Output() public optionChosen = new EventEmitter();\n    @Output() public sendMailButtonChosen = new EventEmitter();\n    @Output() public showCommentSection = new EventEmitter();\n    @Output() public noButtonChosen = new EventEmitter();\n    @Output() public sendCommentChosen = new EventEmitter();\n    public error: any;\n    public botMsg!: MessageAnswer[];\n    public event: any;\n    public showCommentBox = false;\n    public showCommentBoxThumbDown = false;\n    public commentToMail!: string;\n    public answerIdToSendMail!: number;\n    public sendMailData!: SendMail;\n    public button: any;\n    public commentToThumbDown!: string;\n\n    constructor(\n        private conversationService: ConversationService\n    ) { }\n\n    ngOnInit() {\n        this.botMsg = this.botMessages;\n        if (this.botMsg.length > 0 && this.botMsg[0].responseType === 'mail') {\n            this.answerIdToSendMail = this.botMsg[0].answerId;\n        }\n        this.disablePreviousButtons();\n        this.answerIds.push(this.answerId);\n    }\n\n    disablePreviousButtons() {\n        if (this.answerIds.length >= 1) {\n            const firstAnswerId = this.answerIds[1];\n            const lastAnswerId = this.answerIds[this.answerIds.length - 1];\n\n            for (let i = firstAnswerId; i <= lastAnswerId; i++) {\n                const previousOptionButton = 'div#' + i + '>button';\n                const yesNoButton = 'div#' + (this.answerId - 1) + '>button';\n                const sendMailButton = 'div#' + (this.answerId - 1) + '>p>button.sendMail';\n                const sendMailButton2 = 'div#' + (this.answerId - 1) + '>ol>li>button.sendMail';\n                const leaveCommentButton = 'div#' + (this.answerId - 1) + '>ol>li>button.leaveComment';\n                const leaveCommentButton2 = 'div#' + (this.answerId - 1) + '>p>button.leaveComment';\n                $(previousOptionButton).attr('disabled', 'true');\n                $(sendMailButton).attr('disabled', 'true');\n                $(sendMailButton2).attr('disabled', 'true');\n                $(yesNoButton).attr('disabled', 'true');\n                $(leaveCommentButton).attr('disabled', 'true');\n                $(leaveCommentButton2).attr('disabled', 'true');\n            }\n        }\n\n    }\n\n    onOptionClick(selectedText: string, selectedValue: string) {\n        const optionButton = 'div#' + this.answerId + '>button';\n        $(optionButton).attr('disabled', 'true');\n        this.optionChosen.emit({ text: selectedText, value: selectedValue, answerId: this.answerId });\n    }\n\n    sendMail(commentToMail: string) {\n        this.sendMailData = new SendMail();\n        this.sendMailData.AnswerId = this.answerIdToSendMail;\n        this.sendMailData.Comment = commentToMail;\n        this.sendMailData.ConversationId = this.conversationId;\n        this.conversationService.sendMail(this.sendMailData).subscribe(res => {\n\n        }, (error: any) => {\n            this.error = error;\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(e: any) {\n        this.event = e;\n        if (this.event.target.className === 'sendMail' || this.event.target.className === 'yesButton') {\n            this.showCommentSection.emit();\n        } else if (this.event.target.className === 'noButton') {\n            this.noButtonChosen.emit();\n        }\n        if (this.event.target.className === 'sendMail' || this.event.target.className === 'yesButton'\n            || this.event.target.className === 'noButton') {\n            const yesNoButton = 'div#' + this.answerId + '>button';\n            const sendMailButton = 'div#' + this.answerId + '>p>button.sendMail';\n            const sendMailButton2 = 'div#' + this.answerId + '>ol>li>button.sendMail';\n            $(sendMailButton).attr('disabled', 'true');\n            $(sendMailButton2).attr('disabled', 'true');\n            $(yesNoButton).attr('disabled', 'true');\n        }\n        if (this.event.target.className === 'leaveComment') {\n            this.showCommentBoxThumbDown = true;\n            const leaveCommentButton = 'div#' + this.answerId + '>ol>li>button.leaveComment';\n            const leaveCommentButton2 = 'div#' + this.answerId + '>p>button.leaveComment';\n            $(leaveCommentButton).attr('disabled', 'true');\n            $(leaveCommentButton2).attr('disabled', 'true');\n        }\n    }\n\n    onCommentOptionClick(answer: number, commentCounter: number) {\n        const optionButton = 'div#' + commentCounter + '>button';\n        $(optionButton).attr('disabled', 'true');\n        if (answer === 1) {\n            this.showCommentBox = true;\n        } else {\n            this.onSendMailClick();\n        }\n    }\n\n    onSendMailClick() {\n        this.showCommentBox = false;\n        this.sendMail(this.commentToMail);\n        this.sendMailButtonChosen.emit();\n    }\n\n    onSendCommentClick() {\n        const commentToThumbDown = {\n            answerId: this.answerId,\n            comment: this.commentToThumbDown\n        };\n        if (!this.checkIfStringIsBlank(this.commentToThumbDown)) {\n            this.showCommentBoxThumbDown = false;\n            this.sendCommentChosen.emit(commentToThumbDown);\n        }\n    }\n\n    checkIfStringIsBlank(text: string) {\n        return text === undefined || text === null || text === '';\n    }\n\n}\n","module.exports = \"<div class=\\\"windowContent\\\" #scrollMe>\\n    <div id=\\\"Conversation\\\" class=\\\"right-container\\\">\\n\\n        <div class=\\\"messages\\\">\\n            <div class=\\\"message-container\\\">\\n                <div class=\\\"pull-down-table\\\">\\n                    <div class=\\\"pull-down-cell\\\" id=\\\"chatLog\\\">\\n                        <div *ngFor=\\\"let message of messages\\\" #messages>\\n                            <div class=\\\"botMessage\\\" id=\\\"botMessage\\\">\\n                                <botMessage *ngIf=\\\"message.isBotMessage\\\" [botMessages]=\\\"message.botMessages\\\" [answerId]=\\\"message.answerId\\\" \\n                                    [conversationId]=\\\"conversationId\\\" [answerIds]=\\\"answerIds\\\"\\n                                    (optionChosen)=\\\"onOptionClick($event)\\\" (sendMailButtonChosen)=\\\"onSendMailCommentClick()\\\"\\n                                    (showCommentSection)=\\\"showCommentMessage()\\\" (noButtonChosen)=\\\"onNoButtonClick()\\\"\\n                                    (sendCommentChosen)=\\\"onSendCommentClick($event)\\\"></botMessage>\\n                                <div *ngIf=\\\"message.isRankNeeded\\\">\\n                                    <rating [answerId]=\\\"message.answerId\\\" (ratingClick)=\\\"ratingComponentClick($event)\\\"></rating>\\n                                </div>\\n                            </div>\\n                            <customerMessage *ngIf=\\\"message.isCustomerMessage\\\" [inputMessage]=\\\"message.textCustomer\\\" [initials]=\\\"initialsName\\\"></customerMessage>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n<div class=\\\"windowInput\\\">\\n    <input class=\\\"inputText\\\" [(ngModel)]=\\\"customerMessageInput\\\" (keyup.enter)=\\\"onInputMessage()\\\" placeholder=\\\"Type here your question...\\\"/>\\n    <button type=\\\"button\\\" class=\\\"sendButton\\\" (click)=\\\"onInputMessage()\\\"><i class=\\\"fas fa-paper-plane\\\"></i></button>\\n</div>\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewChildren,\n  QueryList,\n  ElementRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Message } from '../models/message';\nimport { ConversationService } from '../services/conversation.service';\nimport { MessageResponse, MessageAnswer } from '../models/messageResponse';\nimport { MessageRequest } from '../models/messageRequest';\nimport { MessageResponseDialogOption } from '../models/messageResponseDialogOption';\nimport * as _ from 'lodash';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'conversation',\n  templateUrl: './conversation.component.html',\n})\nexport class ConversationComponent implements OnInit, AfterViewInit {\n  @ViewChildren('messages') private messagesContainer!: QueryList<any>;\n  @ViewChild('scrollMe') private scrollContainer!: ElementRef;\n  @Output() public conversationIdEmitter = new EventEmitter();\n  public customerMessageInput!: string;\n  public inputCustomerMessage!: string;\n  public inputBotMessage!: string;\n  public messages: Message[] = [];\n  public botMessage!: MessageResponse;\n  public customerMessage!: MessageRequest;\n  public conversationId!: string;\n  public system!: string;\n  public answerIdToComment!: number;\n  public wrongAnswersCounter?: number;\n  public buttons: MessageResponseDialogOption[] = [];\n  public error: any;\n  public options: MessageResponseDialogOption[] = [];\n  public inputStar!: string;\n  public ratingCounter!: number;\n  public rateScore!: number;\n  public imgUrl!: string;\n  public description!: string;\n  public botMessages!: MessageAnswer[];\n  public initialsName!: string;\n  public answerIds!: any[];\n\n  constructor(private conversationService: ConversationService, private authService: AuthService) {}\n\n  ngOnInit() {\n    this.answerIds = [];\n\n    // for initial message\n\n    this.conversationService.initConversation().subscribe(\n      res => {\n        this.conversationId = res.conversationId;\n        this.conversationIdEmitter.emit(this.conversationId);\n        this.wrongAnswersCounter = res.wrongAnswersCounter;\n        this.system = res.system;\n        this.botMessages = res.messageAnswers;\n        this.pushBotMessageToMessagesArray(this.botMessages, false);\n      },\n      (errors: any) => {\n        this.error = errors;\n      }\n    );\n\n    this.initialsName = this.getInitials();\n    this.scrollToBottom();\n  }\n\n  ngAfterViewInit() {\n    this.messagesContainer.changes.subscribe(() => {\n      this.scrollToBottom(), this.ratingCounter++;\n    });\n  }\n\n  getInitials() {\n    const userName = this.authService.getName();\n    const initials = userName\n      .split(' ')\n      .map(n => n[0])\n      .join('');\n    return initials;\n  }\n\n  onInputMessage() {\n    const inputMessage = this.customerMessageInput;\n    this.inputCustomerMessage = inputMessage;\n\n    if (!this.checkIfStringIsBlank(inputMessage)) {\n      const customerMsg = {\n        conversationId: this.conversationId,\n        text: inputMessage,\n        system: this.system,\n        wrongAnswersCounter: this.wrongAnswersCounter,\n      };\n\n      this.conversationService.sendCustomerInput(customerMsg).subscribe(\n        (res: MessageResponse) => {\n          this.pushCustomerMessageToMessagesArray(inputMessage, false);\n          this.conversationId = res.conversationId;\n          this.system = res.system;\n          this.wrongAnswersCounter = res.wrongAnswersCounter;\n          this.readMessageAnswers(res);\n        },\n        (errors: any) => {\n          this.error = errors;\n        }\n      );\n    } else {\n      return;\n    }\n\n    this.customerMessageInput = '';\n  }\n\n  onButtonClick(button: MessageResponseDialogOption) {\n    const customerMsg = {\n      conversationId: this.conversationId,\n      text: button.value,\n      system: this.system,\n      wrongAnswersCounter: this.wrongAnswersCounter,\n    };\n    this.conversationService.sendCustomerInput(customerMsg);\n  }\n\n  readMessageAnswers(res: MessageResponse) {\n    _.each(res.messageAnswers, element => {\n      this.answerIdToComment = element.answerId;\n    });\n    this.botMessages = res.messageAnswers;\n    this.pushBotMessageToMessagesArray(this.botMessages, true, this.answerIdToComment);\n  }\n\n  // run after every customer input\n  pushBotMessageToMessagesArray(botMessages: any[], isRankNeeded: boolean, answerId?: number) {\n    const message: Message = {\n      isBotMessage: true,\n      isCustomerMessage: false,\n      botMessages: botMessages,\n      isRankNeeded: isRankNeeded,\n      answerId: answerId,\n    };\n    this.messages.push(message);\n  }\n\n  pushCustomerMessageToMessagesArray(custMsg: string, isRankNeeded: boolean) {\n    // run after every output\n    const message: Message = {\n      isBotMessage: false,\n      isCustomerMessage: true,\n      textCustomer: custMsg,\n      isRankNeeded: isRankNeeded,\n    };\n    this.messages.push(message);\n  }\n\n  onOptionClick(event: any) {\n    const customerMsg: MessageRequest = {\n      conversationId: this.conversationId,\n      text: event.text,\n      optionValue: event.value,\n      system: this.system,\n      wrongAnswersCounter: this.wrongAnswersCounter as number,\n    };\n    this.inputCustomerMessage = event.text;\n    this.postMessageToApi(customerMsg);\n  }\n\n  postMessageToApi(customerMsg: MessageRequest) {\n    this.conversationService.sendCustomerInput(customerMsg).subscribe(\n      (res: MessageResponse) => {\n        this.pushCustomerMessageToMessagesArray(this.inputCustomerMessage, true);\n        this.conversationId = res.conversationId;\n        this.system = res.system;\n        this.wrongAnswersCounter = res.wrongAnswersCounter;\n        this.readMessageAnswers(res);\n      },\n      (errors: any) => {\n        this.error = errors;\n      }\n    );\n  }\n\n  ratingComponentClick(rate: number) {\n    this.rateScore = rate;\n\n    if (this.rateScore === 0) {\n      this.pushBotMessageToMessagesArray(\n        [\n          {\n            responseType: 'text',\n            answerId: this.answerIdToComment,\n            // tslint:disable-next-line:max-line-length\n            text:\n              '<p>I’m sorry my answer wasn’t helpful. Please either rephrase your question or leave a comment <button class=\"leaveComment\">HERE</button> so I can learn</p>',\n          },\n        ],\n        false,\n        this.answerIdToComment\n      );\n    } else if (this.rateScore === 1) {\n      this.pushBotMessageToMessagesArray(\n        [\n          {\n            responseType: 'text',\n            text: 'Glad I could help!',\n          },\n        ],\n        false\n      );\n    }\n  }\n\n  onSendMailCommentClick() {\n    this.pushBotMessageToMessagesArray(\n      [\n        {\n          responseType: 'text',\n          text: 'Email was sent. Thank you',\n        },\n      ],\n      false,\n      this.answerIdToComment\n    );\n  }\n\n  showCommentMessage() {\n    this.pushBotMessageToMessagesArray(\n      [\n        {\n          responseType: 'mail',\n          answerId: this.answerIdToComment,\n        },\n      ],\n      false,\n      this.answerIdToComment\n    );\n  }\n\n  onNoButtonClick() {\n    this.pushBotMessageToMessagesArray(\n      [\n        {\n          responseType: 'text',\n          text: 'So is there anything else I can do for you?',\n        },\n      ],\n      false,\n      this.answerIdToComment\n    );\n  }\n\n  onSendCommentClick(userComment: any) {\n    this.conversationService.sendComment(userComment).subscribe(\n      res => {\n        this.pushBotMessageToMessagesArray(\n          [\n            {\n              responseType: 'text',\n              text: 'Thank you! Your comment was saved',\n            },\n          ],\n          false,\n          this.answerIdToComment\n        );\n      },\n      error => {\n        this.error = error;\n      }\n    );\n  }\n\n  scrollToBottom() {\n    // add short delay to allow response content to load first\n    setTimeout(\n      () => (this.scrollContainer.nativeElement.scrollTop = this.scrollContainer.nativeElement.scrollHeight),\n      400\n    );\n  }\n\n  checkIfStringIsBlank(text: string) {\n    return text === undefined || text === null || text === '';\n  }\n}\n","module.exports = \"<div class=\\\"customerMessage\\\">\\n    <span class=\\\"message\\\">\\n        {{customerMessageText}}\\n    </span>\\n    <div class=\\\"nameCircle\\\">\\n        {{nameCircle}}\\n    </div>\\n</div>\"","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'customerMessage',\n  templateUrl: './customerMessage.component.html'\n})\n\nexport class CustomerMessageComponent implements OnInit {\n    @Input() public inputMessage!: string;\n    @Input() public initials!: string;\n\n    public customerMessageText!: string;\n    public nameCircle!: string;\n\n    ngOnInit() {\n        this.customerMessageText = this.inputMessage;\n        this.nameCircle = this.initials;\n    }\n}\n","module.exports = \"<div *ngIf=\\\"rateId != null\\\" class=\\\"userRating\\\">\\n    <div class=\\\"rateText\\\">Did it help? </div>\\n    <div id=\\\"starSystem\\\" class=\\\"acidjs-rating-stars rating\\\">\\n       <button type=\\\"button\\\" id=\\\"0-{{rateId}}\\\" class=\\\"thumbDown\\\" (click)='onThumbDownClick(0)'><i class=\\\"far fa-thumbs-down\\\"></i></button>\\n       <button type=\\\"button\\\" id=\\\"1-{{rateId}}\\\" class=\\\"thumbUp\\\" (click)='onThumbUpClick(1)'><i class=\\\"far fa-thumbs-up\\\"></i></button>\\n    </div>\\n</div>\\n\"","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { ConversationService } from '../services/conversation.service';\nimport * as $ from 'jquery';\n\n@Component({\n    selector: 'rating',\n    templateUrl: 'rating.component.html'\n})\nexport class RatingComponent implements OnInit {\n    @Output() public ratingClick = new EventEmitter();\n    @Input() public answerId!: number;\n    public rateId!: number;\n    public isClicked!: boolean;\n    public rating!: number;\n\n    constructor(\n        private conversationService: ConversationService\n    ) { }\n\n    ngOnInit() {\n        this.rateId = this.answerId;\n\n        for (let i = 0; i < 2; i++) {\n            const button = 'button[id=\"' + i + '-' + (this.rateId - 1) + '\"]';\n            $(button).attr('disabled', 'true');\n            $(button).addClass('cursor-not-allowed');\n        }\n    }\n\n    sendRating(rating: number) {\n        this.rating = rating;\n        const starRate = {\n            answerId: this.rateId,\n            rating: rating\n        };\n        this.conversationService.sendRating(starRate).subscribe(res => { });\n\n        this.ratingClick.emit(rating);\n    }\n\n    onThumbUpClick(rating: number) {\n        for (let i = 0; i < 2; i++) {\n            const button = 'button[id=\"' + i + '-' + this.rateId + '\"]';\n            $(button).attr('disabled', 'true');\n        }\n\n        const thumbClicked = 'button[id=\"1-' + this.rateId + '\"].thumbUp>i';\n        $(thumbClicked).removeClass('fa-thumbs-o-up');\n        $(thumbClicked).addClass('fa-thumbs-up');\n        const thumbNotClicked = 'button[id=\"0-' + this.rateId + '\"].thumbDown>i';\n        $(thumbNotClicked).addClass('grey-thumb');\n\n        this.sendRating(rating);\n    }\n    onThumbDownClick(rating: number) {\n        for (let i = 0; i < 2; i++) {\n            const button = 'button[id=\"' + i + '-' + this.rateId + '\"]';\n            $(button).attr('disabled', 'true');\n        }\n\n        const thumbClicked = 'button[id=\"0-' + this.rateId + '\"].thumbDown>i';\n        $(thumbClicked).removeClass('fa-thumbs-o-down');\n        $(thumbClicked).addClass('fa-thumbs-down');\n        const thumbNotClicked = 'button[id=\"1-' + this.rateId + '\"].thumbUp>i';\n        $(thumbNotClicked).addClass('grey-thumb');\n\n        this.sendRating(rating);\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface IApiDetailsService {\n  getApiUrl (): string;\n}\n\nexport let IApiDetailsServiceToken = new InjectionToken('.api-details-service.interface');\n","import {Injectable} from '@angular/core';\nimport {IApiDetailsService} from './api-details-service.interface';\n\n@Injectable()\nexport class ApiDetailsServiceProd implements IApiDetailsService {\n\n  private apiUrl = '/';\n\n  constructor() {\n  }\n\n  getApiUrl() {\n    return this.apiUrl;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { AdalConfig } from '../models/adalConfig';\nexport interface ILoginDetailsService {\n    getLoginDetails (): AdalConfig;\n  }\n\nexport let ILoginDetailsServiceToken = new InjectionToken('.login-details-service.interface');\n","import { Injectable } from '@angular/core';\nimport { ILoginDetailsService } from './login-details-service.interface';\nimport { AdalConfig } from '../models/adalConfig';\n\n@Injectable()\nexport class LoginDetailsServiceProd implements ILoginDetailsService {\n\n  private adalConfig: AdalConfig = {\n    tenant: 'f10e34fe-8994-4b52-a7da-4f7aa9068ca0', // Optional by default, it sends common\n    clientId: 'f9023644-edfd-4c74-8297-22183f9bd41f', // Required\n    redirectUri: this.getOrigin() + window.location.pathname,\n    navigateToLoginRequestUrl: false,\n    cacheLocation: 'localStorage'\n  };\n\n  constructor() {\n  }\n\n  getLoginDetails () {\n    return this.adalConfig;\n  }\n\n  getOrigin() {\n    if (!window.location.origin) {\n      const port = window.location.port ? ':' + window.location.port : '';\n      return window.location.protocol + '//' + window.location.hostname + port;\n    } else {\n      return window.location.origin;\n    }\n  }\n}\n","export class AdalConfig{\n\n  constructor(tenant: string,\n    clientId: string,\n    redirectUri: string,\n    navigateToLoginRequestUrl: boolean,\n    cacheLocation: string) {\n      this.tenant = tenant;\n      this.clientId = clientId;\n      this.redirectUri = redirectUri;\n      this.navigateToLoginRequestUrl = navigateToLoginRequestUrl;\n      this.cacheLocation = cacheLocation;\n  }\n    tenant!: string;\n    clientId!: string;\n    redirectUri!: string;\n    navigateToLoginRequestUrl!: boolean;\n    cacheLocation!: string;\n}\n","export class SendMail {\n    ConversationId!: string;\n    AnswerId!: number;\n    Comment!: string;\n}\n","import { MsAdalAngular6Service } from 'microsoft-adal-angular6';\nimport { HttpClient, HttpHandler } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n  // private_user = null;\n  // private_config = {\n  //   tenant : '136544d9-038e-4646-afff-10accb370679',// <-- tenantId mentionned in the previous article\n  //   clientId:'257b6c36-1168-4aac-be93-6f2cd81cec43', //<-- clientId mentionned in the previous article\n  //   redirectUri:\"http://localhost:4200/auth-callback\", //<-- callback URI mentionned in the previous article\n  //   postLogoutRedirectUri:\"http://localhost:4200\" //<-- same URI as homepage URI mentionned in the previous article\n  // };\n  private _adalSvc: MsAdalAngular6Service;\n\n  constructor(private adalSrv: MsAdalAngular6Service) {\n    this._adalSvc = adalSrv;\n  }\n\n  // constructor(private adalSvc: MsAdalAngular6Service) {\n  //     this.adalSvc.init(this._config);\n  //   }  constructor(private_adal:Adal5Service) {\n  //     this.adalSvc.init(this._config);\n  // }\n\n  public isLoggedIn(): boolean {\n    return true;\n  }\n\n  public getToken(): string {\n    return this._adalSvc.accessToken;\n  }\n\n  public signout(): void {\n    this._adalSvc.logout();\n  }\n\n  public startAuthentication(): any {\n    this._adalSvc.login();\n  }\n\n  public getName(): string {\n    return this._adalSvc.userInfo.profile.name;\n  }\n\n  public completeAuthentication(): void {\n    this._adalSvc.handleCallback();\n    // this._adalSvc.getUser().subscribe(user=> {\n    //   this._user=user;\n    //   console.log(this.adalSvc.userInfo);\n    //   var expireIn=user.profile.exp-newDate().getTime();\n    // });\n\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { MessageRequest } from '../models/messageRequest';\nimport { MessageResponse } from '../models/messageResponse';\nimport { Rating } from '../models/rating';\nimport { Comment } from '../models/comment';\nimport { IApiDetailsServiceToken, IApiDetailsService } from '../configs/api-details-service.interface';\nimport { AuthService } from '../services/auth.service';\nimport { SendMail } from '../models/sendMail';\n\n@Injectable()\nexport class ConversationService {\n  private baseUrl: string;\n  private bearerToken: string;\n  public httpOptions: {};\n  constructor(\n    private http: HttpClient,\n    @Inject(IApiDetailsServiceToken) protected apiDetailsService: IApiDetailsService,\n    private authService: AuthService\n  ) {\n    this.baseUrl = apiDetailsService.getApiUrl();\n    this.bearerToken = authService.getToken();\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Headers': '*',\n        'Access-Control-Allow-Methods': '*',\n        Authorization: 'Bearer ' + this.bearerToken,\n      }),\n      withCredentials: true,\n    };\n  }\n\n  sendCustomerInput(inputMessage: any) {\n    const url = this.baseUrl + 'api/Conversation/message';\n    const response = this.http.post(url, inputMessage, this.httpOptions);\n    return response.pipe(map((res: any) => res));\n  }\n\n  getBotOutput(inputMessage: any): Observable<MessageResponse> {\n    const url = this.baseUrl + 'api/Conversation/message';\n    return this.http.post(url, inputMessage, this.httpOptions).pipe(map((res: any, idx = 0) => res));\n  }\n\n  initConversation(): Observable<MessageResponse> {\n    const url = this.baseUrl + 'api/Conversation/initConversation';\n    return this.http.get(url, this.httpOptions).pipe(map((res: any) => res));\n  }\n\n  sendRating(rating: Rating) {\n    const url = this.baseUrl + 'api/Rating/rate';\n    return this.http.post(url, rating, this.httpOptions).pipe();\n  }\n\n  sendComment(comment: Comment) {\n    const url = this.baseUrl + 'api/Rating/comment';\n    return this.http.post(url, comment, this.httpOptions).pipe(map(res => res));\n  }\n\n  sendMail(sendMailData: SendMail) {\n    const url = this.baseUrl + 'api/Email/sendMail';\n    const data = sendMailData;\n    return this.http.post(url, data, this.httpOptions).pipe(map(res => res));\n  }\n\n  private handleError(error: any) {\n    return Observable.throw(error.json().Errors);\n  }\n\n  private handleResponse(response: any) {\n    return response.json().Result;\n  }\n}\n","export class EnviromentModel {\n    type: EnviromentType;\n    production: boolean;\n    tenant: string;\n    clientId: string;\n    redirectUri: string;\n    navigateToLoginRequestUrl: boolean;\n    cacheLocation: string;\n    apiUrl: string;\n\n    constructor(type: EnviromentType,\n      tenant: string,\n      clientId: string,\n      redirectUri: string,\n      navigateToLoginRequestUrl: boolean,\n      cacheLocation: string,\n      production: boolean,\n      apiUrl: string) {\n        this.type = type;\n        this.tenant = tenant;\n        this.clientId = clientId;\n        this.redirectUri = redirectUri;\n        this.navigateToLoginRequestUrl = navigateToLoginRequestUrl;\n        this.cacheLocation = cacheLocation;\n        this.production = false;\n        this.apiUrl = apiUrl;\n    }\n}\n\nexport enum EnviromentType {\n    local,\n    test,\n    prod\n}\n","import { EnviromentModel, EnviromentType } from './environment.model';\n\nexport const environment = new EnviromentModel(\n  EnviromentType.prod,\n  'f10e34fe-8994-4b52-a7da-4f7aa9068ca0', // tenant\n  'f9023644-edfd-4c74-8297-22183f9bd41f', // clientId\n  getOrigin() + window.location.pathname, // redirectUri\n  false,                // navigateToLoginRequestUrl\n  'localStorage',       // cacheLocation\n  true,\n  '/' // apiUrl\n);\n\nfunction getOrigin() {\n  if (!window.location.origin) {\n    const port = window.location.port ? ':' + window.location.port : '';\n    return window.location.protocol + '//' + window.location.hostname + port;\n  } else {\n    return window.location.origin;\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\nenableProdMode();\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}